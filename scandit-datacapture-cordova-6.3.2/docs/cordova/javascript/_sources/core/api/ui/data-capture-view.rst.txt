Data Capture View
=================

.. module:: scandit.datacapture.core.ui

.. class:: DataCaptureView
  @objc@ SDCDataCaptureView : UIView
  @java@ DataCaptureView : RelativeLayout
  @xamarin.android#csharp@ DataCaptureView : RelativeLayout
  @xamarin.ios#csharp@ DataCaptureView : UIView
  :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

  The capture view is the main UI view to be used together with the data capture context for applications that wish to display a video preview together with additional augmentations such as barcode locations.

  The data capture view itself only displays the preview and shows UI elements to control the camera, such as buttons to switch torch on and off, or a button to switch between front and back facing cameras. Augmentations, such as the locations of identified barcodes are provided by individual overlays. This view will also display errors in case something goes wrong with its context, see the :type:`ContextStatus` for a list of possible errors.

  Unless otherwise specified, methods and properties of this class should only be accessed from the main thread.

  .. eager-ifconfig:: platform == 'ios'

    .. note::
      **Targeting iOS 10 and earlier**

      On devices running **iOS 10 and earlier**, the data capture view should be constrained to be under the top layout guide and above the bottom layout guide to avoid certain parts of the view not being shown properly.

      On devices running **iOS 11 and later**, constraining to be inside the safe area is *not* necessary for the view to be shown properly and will automatically respect safe area guides.

  **Related topics**: :doc:`/get-started-barcode`, :doc:`/get-started-matrixscan`, :doc:`/core/concepts`, :doc:`/ui-examples`.

  .. method:: static DataCaptureView ViewForContext(DataCaptureContext? context)
    @java@ static DataCaptureView newInstance(Context context, capture.DataCaptureContext? dataCaptureContext)
    @objc@ +(instancetype)dataCaptureViewForContext:(nullable SDCDataCaptureContext*)context frame:(CGRect)frame
    @javascript@ static forContext(context: DataCaptureContext?): DataCaptureView
    @xamarin.ios#csharp@ static DataCaptureView Create(DataCaptureContext context, CGRect frame)
    @xamarin.android#csharp@ static DataCaptureView Create(Context context, DataCaptureContext dataCaptureContext)
    :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

    Initializes a new data capture view. When a data capture context is provided, the view is associated with the context. The data capture context can be changed at a later point by setting the :prop:`DataCaptureContext` property.

  .. method:: DataCaptureView()
    @objc@ -(instancetype)initWithFrame:(CGRect)frame
    :available: ios=6.0, cordova=6.1

    Initializes a new data capture view. The context must be provided by setting the :prop:`DataCaptureContext` property.

  .. method:: DataCaptureView(CGRect frame)
    :available: xamarin.ios=6.2

    Initializes a new data capture view. The context must be provided by setting the :prop:`DataCaptureContext` property.

  .. property:: DataCaptureContext? DataCaptureContext { get; set; }
    @objc@ @property (nonatomic, nullable, strong) SDCDataCaptureContext *context
    @javascript@ context: DataCaptureContext?
    :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

    The data capture context of this capture view. This property must be set to an instance of the data capture context for this view to display anything.

    When the capture context is attached to a data capture view, it is removed from any other data capture view it was attached to.

  .. property:: IList<IDataCaptureOverlay> Overlays { get; }
    :available: none

     Readonly List of capture overlays of this capture view. Use :meth:`AddOverlay` to add, and :meth:`RemoveOverlay` to remove overlays.

  .. method:: void AddOverlay(IDataCaptureOverlay overlay)
    :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

    Adds the overlay to this data capture view. If the overlay is already part of this view, the call has no effect.

  .. method:: void RemoveOverlay(IDataCaptureOverlay overlay)
    :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

    Removes overlay from this data capture view. If the overlay is not part of this view, the call has no effect.

  .. method:: void AddControl(IControl control)
    :available: android=6.0, ios=6.0, xamarin=6.2

    Adds the control to the data capture view. In case multiple controls get added, the order in which :meth:`AddControl` gets called determines how the controls are going to be layed out. If the control is already part of this view, the call has no effect.

    The controls are placed in linear layout at the top of the screen with the controls displayed from left to right.

    .. note:: At the moment, the only supported control is the :type:`TorchSwitchControl`

  .. method:: void RemoveControl(IControl control)
    :available: android=6.0, ios=6.0, xamarin=6.2

    Removes the previously added control from data capture view. If the control is not part of this view, the call has no effect.

  .. method:: void AddListener(IDataCaptureViewListener listener)
    :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

    Adds the listener to this data capture view.

    |add-listener|

  .. method:: void RemoveListener(IDataCaptureViewListener listener)
    :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

    Removes a previously added listener from this data capture view.

    |remove-listener|

  .. method:: Point MapFramePointToView(Point point)
    @objc@ - (CGPoint)viewPointForFramePoint:(CGPoint)point
    @javascript@ viewPointForFramePoint(point: Point): Promise<Point>
    @xamarin.ios#csharp@ CGPoint MapFramePointToView(CGPoint point)
    :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

    Converts a point in the coordinate system of the last visible frame and maps it to a coordinate in the view.

    This method is thread-safe and can be called from any thread.

  .. method:: Quadrilateral MapFrameQuadrilateralToView(Quadrilateral quadrilateral)
    @objc@ -(SDCQuadrilateral)viewQuadrilateralForFrameQuadrilateral:(SDCQuadrilateral)quadrilateral
    @javascript@ viewQuadrilateralForFrameQuadrilateral(quadrilateral: Quadrilateral): Promise<Quadrilateral>
    :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

    Converts a quadrilateral in the coordinate system of the last visible frame and maps it to a coordinate in the view.

  .. property:: MarginsWithUnit ScanAreaMargins { get; set; }
    :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

    The margins to use for the scan area. The margins are measured from the border of the data capture view and allow to specify a region around the border that is excluded from scanning.

    By default, the margins are zero and the scanning happens in the visible part of the preview.

  .. property:: PointWithUnit PointOfInterest { get; set; }
    :available: android=6.0, ios=6.0, cordova=6.1, xamarin=6.2

    The point of interest of this data capture view. By default, the point of interest is centered in the data capture view.
    The point of interest is used to control the *center of attention* for the following subsystems:

    - Auto focus and exposure metering of the camera.
    - :type:`Location selections<ILocationSelection>` for capture modes that support them. When no location selection is set, the point of interest defines the location at which the recognition optimizes for reading codes/text/etc.
    - Rendered :type:`viewfinders<IViewfinder>`.

    .. eager-ifconfig:: platform == 'ios' or platform == 'android'

      The point of interest can be overwritten by individual capture modes such as :type:`barcode.BarcodeCapture` and :type:`text.TextCapture`. The overwriting point of interest only affects the center of the location selection and viewfinder of said mode, it does not affect the auto focus or exposure metering of the camera.

    .. eager-ifconfig:: platform == 'cordova' or platform == 'xamarin.ios' or platform == 'xamarin.android'

      The point of interest can be overwritten by individual capture modes such as :type:`barcode.BarcodeCapture`. The overwriting point of interest only affects the center of the location selection and viewfinder of said mode, it does not affect the auto focus or exposure metering of the camera.

  .. property:: Anchor LogoAnchor { get; set; }
    :available: ios=6.0, android=6.0, cordova=6.1, xamarin=6.2

    The anchor point to use for positioning the logo. By default the logo is placed in the lower-right corner of the scan area (:enum:`Anchor.BottomRight`).

    To shift the logo relative to the anchor position, use the :prop:`LogoOffset` property.

    This property has no effect when the logo is drawn by one of the viewfinders.

  .. property:: core.PointWithUnit LogoOffset { get; set; }
    :available: ios=6.0, android=6.0, cordova=6.1, xamarin=6.2

    The offset relative to the :prop:`logo anchor<LogoAnchor>`. When specified in pixels (:enum:`MeasureUnit.Pixel`) or device-independent pixels (:enum:`MeasureUnit.Dip`), the offset is used as-is. When specified as a fraction (:enum:`MeasureUnit.Fraction`), the offset is computed relative to the view size minus the scan area margins. For example, a value of 0.1 for the x-coordinate will set the offset to be 10% of the view width minus the left and right margins.

    This property has no effect when the logo is drawn by one of the viewfinders.


  .. method:: void SetProperty(string name, object value)
    @objc@ - (void)setValue:(id)value forProperty:(NSString *)property
    :available: android=6.0, ios=6.1.1, xamarin=6.2

    Sets a custom property on this data capture view. This function is for internal use. Any features and functionality offered through this method can and will vanish without public notice from one version to the next.

  .. method:: void ConnectToElement(HTMLElement element)
    :available: cordova=6.1

    Connect the data capture view to a given HTML element, so it's size and position can be mirrored.

    To position the capture view below the WebView and show content over the camera preview, change the z-index of the element to be less than 0. If you do this, make sure that the background of your HTML page is transparent, so the capture view positioned under the WebView can be seen.

    .. note:: Should not be used together with :meth:`SetFrame`. One strategy to size the capture view should be chosen.

  .. method:: Task SetFrame(core.Rect frame, bool isUnderContent)
    :available: cordova=6.3.1

    Manually set a specific size and position for the capture view.

    To position the capture view below the WebView and show content over the camera preview, set the `isUnderContent` argument to |true|. If you do this, make sure that the background of your HTML page is transparent, so the capture view positioned under the WebView can be seen.

    .. note:: Should not be used together with :meth:`ConnectToElement`. One strategy to size the capture view should be chosen.

  .. method:: Task Show()
    :available: cordova=6.3.1

    Set the view to be visible.

    Should only be used with :meth:`SetFrame`.

  .. method:: Task Hide()
    :available: cordova=6.3.1

    Set the view not to be visible.

    Should only be used with :meth:`SetFrame`.
